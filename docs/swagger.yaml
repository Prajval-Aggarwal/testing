basePath: /
definitions:
  request.AddArenaRequest:
    properties:
      arenaLevel:
        type: integer
      arenaName:
        type: string
      latitude:
        type: number
      longitude:
        type: number
    type: object
  request.AddCarRequest:
    properties:
      carId:
        type: string
      garageId:
        type: string
    type: object
  request.AddGarageRequest:
    properties:
      coinsRequired:
        description: coins required to unlock the garage
        type: integer
      garageName:
        type: string
      garageType:
        type: integer
      latitude:
        type: number
      level:
        description: level reuired to unlock the garage
        type: integer
      longitude:
        type: number
    type: object
  request.CarRequest:
    properties:
      carId:
        type: string
    type: object
  request.CarUpgradesRequest:
    properties:
      carId:
        type: string
      paymentMode:
        type: string
    type: object
  request.ColorCustomizationRequest:
    properties:
      carId:
        type: string
      colorCategory:
        type: string
      colorCode:
        type: string
      colorName:
        type: string
      colorType:
        type: string
    type: object
  request.DeletArenaReq:
    properties:
      arenaId:
        type: string
    type: object
  request.DeletGarageReq:
    properties:
      garageId:
        type: string
    type: object
  request.ForgotPassRequest:
    properties:
      email:
        type: string
    type: object
  request.GarageRequest:
    properties:
      carId:
        type: string
    type: object
  request.GetCarColorCategoriesRequest:
    properties:
      part:
        type: string
    type: object
  request.GetCarColorTypesRequest:
    properties:
      colorCategory:
        type: string
      part:
        type: string
    type: object
  request.GuestLoginRequest:
    properties:
      deviceId:
        type: string
      os:
        type: integer
      playerName:
        type: string
      token:
        type: string
    type: object
  request.InteriorCustomizeRequest:
    properties:
      carId:
        type: string
      colorCode:
        type: string
      colorName:
        type: string
    type: object
  request.LicenseRequest:
    properties:
      carId:
        type: string
      value:
        type: string
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  request.UpdateArenaReq:
    properties:
      arenaId:
        type: string
      arenaLevel:
        type: integer
      arenaName:
        type: string
      latitude:
        type: number
      longitude:
        type: number
    type: object
  request.UpdateEmailRequest:
    properties:
      email:
        type: string
    type: object
  request.UpdateGarageReq:
    properties:
      coinsRequired:
        description: coins required to unlock the garage
        type: integer
      garageId:
        type: string
      garageName:
        type: string
      garageType:
        type: integer
      latitude:
        type: number
      level:
        description: level reuired to unlock the garage
        type: integer
      longitude:
        type: number
    type: object
  request.UpdatePasswordRequest:
    properties:
      password:
        type: string
    type: object
  request.WheelCustomizeRequest:
    properties:
      carId:
        type: string
      colorCategory:
        type: string
      colorCode:
        type: string
      colorName:
        type: string
    type: object
  response.Success:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: This is the doumentation for drag racing game
  title: Drag Racing
  version: "2.0"
paths:
  /admin:
    get:
      consumes:
      - application/json
      description: Retrieve the list of all admins
      produces:
      - application/json
      responses:
        "200":
          description: Admin Details fetched successfully
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get Admins list
      tags:
      - Authentication
  /admin/arena:
    delete:
      consumes:
      - application/json
      description: Delete a Arena by its ID
      parameters:
      - description: Admin Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Arena request payload
        in: body
        name: ArenaReq
        required: true
        schema:
          $ref: '#/definitions/request.DeletArenaReq'
      produces:
      - application/json
      responses:
        "200":
          description: Arena deleted successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Arena not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Delete a Arena
      tags:
      - Arena
    post:
      consumes:
      - application/json
      description: Add a new arena to the system
      parameters:
      - description: Admin Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Arena request payload
        in: body
        name: garageReq
        required: true
        schema:
          $ref: '#/definitions/request.AddArenaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Arena added successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Add a new arena
      tags:
      - Arena
    put:
      consumes:
      - application/json
      description: Update a Arena by its ID
      parameters:
      - description: Admin Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update request payload
        in: body
        name: updateReq
        required: true
        schema:
          $ref: '#/definitions/request.UpdateArenaReq'
      produces:
      - application/json
      responses:
        "200":
          description: Arena updated successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Arena not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Update a Arena
      tags:
      - Arena
  /admin/garage/add:
    post:
      consumes:
      - application/json
      description: Add a new garage to the system
      parameters:
      - description: Admin Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Garage request payload
        in: body
        name: garageReq
        required: true
        schema:
          $ref: '#/definitions/request.AddGarageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Garage added successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Add a new garage
      tags:
      - Garage
  /admin/garage/delete:
    delete:
      consumes:
      - application/json
      description: Delete a garage by its ID
      parameters:
      - description: Admin Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Garage request payload
        in: body
        name: garageReq
        required: true
        schema:
          $ref: '#/definitions/request.DeletGarageReq'
      produces:
      - application/json
      responses:
        "200":
          description: Garage deleted successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Garage not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Delete a garage
      tags:
      - Garage
  /admin/garage/update:
    put:
      consumes:
      - application/json
      description: Update a garage by its ID
      parameters:
      - description: Admin Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update request payload
        in: body
        name: updateReq
        required: true
        schema:
          $ref: '#/definitions/request.UpdateGarageReq'
      produces:
      - application/json
      responses:
        "200":
          description: Garage updated successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Garage not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Update a garage
      tags:
      - Garage
  /arena/get:
    get:
      consumes:
      - application/json
      description: Retrieve the list of all Arenas
      parameters:
      - description: Number of records to skip (default is 0)
        in: query
        name: skip
        type: integer
      - description: Maximum number of records to fetch (default is 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Arena list fetched successfully
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get All Arena List
      tags:
      - Arena
  /arena/types:
    get:
      consumes:
      - application/json
      description: Retrieve the list of all arena types
      produces:
      - application/json
      responses:
        "200":
          description: Arena type list fetched successfully
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get All Arena type List
      tags:
      - Arena
  /car/buy:
    post:
      consumes:
      - application/json
      description: Buy a car for a player
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Buy Car Request
        in: body
        name: carRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car added to player successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Car not found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      security:
      - ApiKeyAuth: []
      summary: Buy Car
      tags:
      - Car
  /car/customise/color:
    put:
      consumes:
      - application/json
      description: Customizes the color of a player's car.
      parameters:
      - description: The ID of the player
        in: header
        name: playerId
        required: true
        type: string
      - description: Color customization request object
        in: body
        name: colorReq
        required: true
        schema:
          $ref: '#/definitions/request.ColorCustomizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Color Customization
      tags:
      - Car-Customize
  /car/customise/interior:
    put:
      consumes:
      - application/json
      description: Customizes the interior of a player's car.
      parameters:
      - description: The ID of the player
        in: header
        name: playerId
        required: true
        type: string
      - description: Interior customization request object
        in: body
        name: interiorReq
        required: true
        schema:
          $ref: '#/definitions/request.InteriorCustomizeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Interior Customization
      tags:
      - Car-Customize
  /car/customise/license:
    put:
      consumes:
      - application/json
      description: Customizes the license plate of a player's car.
      parameters:
      - description: The ID of the player
        in: header
        name: playerId
        required: true
        type: string
      - description: License plate customization request object
        in: body
        name: licenseRequest
        required: true
        schema:
          $ref: '#/definitions/request.LicenseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: License Plate Customization
      tags:
      - Car-Customize
  /car/customise/wheels:
    put:
      consumes:
      - application/json
      description: Customizes the wheels of a player's car.
      parameters:
      - description: The ID of the player
        in: header
        name: playerId
        required: true
        type: string
      - description: Wheel customization request object
        in: body
        name: wheelReq
        required: true
        schema:
          $ref: '#/definitions/request.WheelCustomizeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Wheel Customization
      tags:
      - Car-Customize
  /car/equip:
    put:
      consumes:
      - application/json
      description: Equip a car for a player
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Equip Car Request
        in: body
        name: equipRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car equipped successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
      summary: Equip Car
      tags:
      - Car
  /car/get-all:
    get:
      consumes:
      - application/json
      description: Retrieve the list of all car
      produces:
      - application/json
      responses:
        "200":
          description: Garage list fetched successfully
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get All Garage List
      tags:
      - Car
  /car/get-by-id:
    post:
      consumes:
      - application/json
      description: Retrieve car details, stats, and customizations by car ID
      parameters:
      - description: Get car by ID request
        in: body
        name: getReq
        required: true
        schema:
          $ref: '#/definitions/request.CarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Data fetch success
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get car by ID
      tags:
      - Car
  /car/repair:
    post:
      consumes:
      - application/json
      description: Repair a car by deducting the repair cost from the player's coins
        and updating the car's durability
      parameters:
      - description: Repair car request
        in: body
        name: repairCarRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car sold successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Car not found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Repair car
      tags:
      - Car
  /car/sell:
    delete:
      consumes:
      - application/json
      description: Sell a car for a player
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Sell Car Request
        in: body
        name: sellCarRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car sold successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Car not found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      security:
      - ApiKeyAuth: []
      summary: Sell Car
      tags:
      - Car
  /car/upgrade/body:
    put:
      consumes:
      - application/json
      description: Upgrade the engine of a player's car
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarUpgradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: body upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade body
      tags:
      - Car-Upgrades
  /car/upgrade/engine:
    put:
      consumes:
      - application/json
      description: Upgrade the engine of a player's car
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarUpgradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Engine upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade Engine
      tags:
      - Car-Upgrades
  /car/upgrade/intake:
    put:
      consumes:
      - application/json
      description: Upgrade the engine of a player's car
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarUpgradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: intake upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade intake
      tags:
      - Car-Upgrades
  /car/upgrade/nitrous:
    put:
      consumes:
      - application/json
      description: Upgrade the engine of a player's car
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarUpgradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: nitrous upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade nitrous
      tags:
      - Car-Upgrades
  /car/upgrade/tires:
    put:
      consumes:
      - application/json
      description: Upgrade the engine of a player's car
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarUpgradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: tires upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade tires
      tags:
      - Car-Upgrades
  /car/upgrade/transmission:
    put:
      consumes:
      - application/json
      description: Upgrade the engine of a player's car
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarUpgradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: transmission upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade transmission
      tags:
      - Car-Upgrades
  /car/upgrade/turbo:
    put:
      consumes:
      - application/json
      description: Upgrade the engine of a player's car
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.CarUpgradesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Turbo upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade Turbo
      tags:
      - Car-Upgrades
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Forgot password
      parameters:
      - description: Admin registered email
        in: body
        name: adminEmail
        required: true
        schema:
          $ref: '#/definitions/request.ForgotPassRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
      tags:
      - Authentication
  /garage/add-car:
    post:
      consumes:
      - application/json
      description: Add a car to a player's garage
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add Car Request
        in: body
        name: addCarRequest
        required: true
        schema:
          $ref: '#/definitions/request.AddCarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Car added to garage successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Add Car to Garage
      tags:
      - Garage
  /garage/buy:
    post:
      consumes:
      - application/json
      description: Buy a garage for a player
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Buy Garage Request
        in: body
        name: buyRequest
        required: true
        schema:
          $ref: '#/definitions/request.GarageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Garage bought successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Garage not found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      security:
      - ApiKeyAuth: []
      summary: Buy Garage
      tags:
      - Garage
  /garage/get:
    get:
      consumes:
      - application/json
      description: Retrieve the list of garages owned by a player
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data fetched successfully
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get Player Garage List
      tags:
      - Garage
  /garage/types:
    get:
      consumes:
      - application/json
      description: Retrieve the list of all garages
      produces:
      - application/json
      responses:
        "200":
          description: Garage type list fetched successfully
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get All Garage type List
      tags:
      - Garage
  /garage/upgrade:
    put:
      consumes:
      - application/json
      description: Upgrade a player's garage to the next level
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Upgrade Request
        in: body
        name: upgradeRequest
        required: true
        schema:
          $ref: '#/definitions/request.GarageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Garage upgraded successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Upgrade Garage
      tags:
      - Garage
  /garages/get-all:
    get:
      consumes:
      - application/json
      description: Retrieve the list of all garages
      parameters:
      - description: Number of records to skip (default is 0)
        in: query
        name: skip
        type: integer
      - description: Maximum number of records to fetch (default is 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Garage list fetched successfully
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get All Garage List
      tags:
      - Garage
  /get-color-category:
    get:
      consumes:
      - application/json
      description: Retrieve a list of car color categories for a specific part
      parameters:
      - description: Car customization part
        in: body
        name: part
        required: true
        schema:
          $ref: '#/definitions/request.GetCarColorCategoriesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get car color categories
      tags:
      - Car-Customize
  /get-color-type:
    get:
      consumes:
      - application/json
      description: Retrieve a list of car color types for a specific part and color
        category
      parameters:
      - description: Car color type like fluorescent,military
        in: body
        name: part
        required: true
        schema:
          $ref: '#/definitions/request.GetCarColorTypesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get car color types
      tags:
      - Car-Customize
  /get-colors:
    get:
      consumes:
      - application/json
      description: Retrieve a list of car color types for a specific part and color
        category
      parameters:
      - description: Car color type like fluorescent,military
        in: body
        name: part
        required: true
        schema:
          $ref: '#/definitions/request.GetCarColorTypesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get car color types
      tags:
      - Car-Customize
  /get-customization:
    get:
      consumes:
      - application/json
      description: Retrieve a list of car customization parts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get car customization parts
      tags:
      - Car-Customize
  /guest-login:
    post:
      consumes:
      - application/json
      description: Perform guest login and generate access token
      parameters:
      - description: Guest Login Request
        in: body
        name: guestLoginRequest
        required: true
        schema:
          $ref: '#/definitions/request.GuestLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Guest Login
      tags:
      - Authentication
  /login:
    post:
      consumes:
      - application/json
      description: Perform user login and generate access token
      parameters:
      - description: Login Details
        in: body
        name: loginDetails
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: User Login
      tags:
      - Authentication
  /player-details:
    get:
      consumes:
      - application/json
      description: Equip a car for a player
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Car equipped successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorised
          schema:
            $ref: '#/definitions/response.Success'
      summary: Get player details
      tags:
      - Player
  /reset-password:
    patch:
      consumes:
      - application/json
      description: Reset password
      parameters:
      - description: Reset token
        in: query
        name: token
        required: true
        type: string
      - description: Admins new password
        in: body
        name: NewPassword
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
      tags:
      - Authentication
  /update-email:
    put:
      consumes:
      - application/json
      description: Update the email address of a player
      parameters:
      - description: Update Email Request
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/request.UpdateEmailRequest'
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Email updated successfully
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Success'
        "404":
          description: Player not found
          schema:
            $ref: '#/definitions/response.Success'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Success'
      summary: Update Email
      tags:
      - Player
  /update-pass:
    patch:
      consumes:
      - application/json
      description: Updates the password of the player
      parameters:
      - description: Admin Access Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: New password of the player
        in: body
        name: newPassword
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Success'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Success'
      tags:
      - Authentication
swagger: "2.0"
